COMANDOS DOTNET:

1. dotnet new sln --> Crea una solución en la ruta especificada
2. dotnet new webapi -n API --> Para crear la API en la ruta especificada
3. dotnet sln -h --> Ayuda y descripcion de las funciones que puede ofrecer el comando sln 
4. dotnet sln add API --> Agrega el proyecto API dentro de la solución
5. dotnet sln list --> Lista los proyectos contenidos en la solución

* VER Capitulo 7 del Curso que hay configuraciones adicionales

6. dotnet tool list -g --> Para ver los paquetes instalados a nivel global
7. Se instala nuget dotnet-ef (Entity Framework) --> leccion 13
8. Tuve problemas para generar la base de datos de sqlLite, no creaba la tabla EFMigrationsHistory, y esto era debido a que en el appsettings.Development.json no tenía el orden de las llaves correcto y la sintaxis del connectionstring estaba errada. --- Tema 14
9. El DataContext permite accesar los objetos definidos en la Base de Datos y en su clase son definidos eestos objetos --- tema 15
10. Se hace uso de Postman para probar los ActionResult --- Tema 15
11. dotnet new gitignore: Crea este archivo para ignorar lo que se va a versionar.
12. Creando ya el proyecto de Angular de DatingApp, para poder listar los usuarios que vienen de la API, es necesario importar HttpClientModule de @angular/common/http en el app.module.ts
    implementar la interfaz OnInit con su respectivo método ngOnInit() --> Tema 23
13. Para poder enviar la petición a la API es necesario habilitar el CORS en el program.cs de la API --> Tema 24 
14. Se instala ngx-bootstrap, bootstrap y font-awesome y estos son configurados en el archivo angular.json ---> Tema 26
15. Descarga e instalación de certificado de seguridad para el front-end client. Las referencias se realizan en angular.json ---> Tema 28
